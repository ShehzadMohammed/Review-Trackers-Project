name: Initial Deployment - Terraform - Kubernetes

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  actions: write
jobs:
  Initial_Deployment:
    runs-on: ubuntu-latest
    env:
      REPOSITORY: shehzadmohammed
      IMAGE_NAME: review_trackers_project
      TAG: latest
      AKS_CLUSTER_NAME: "rtpykube"
      RESOURCE_GROUP_NAME: "rt-infra"
      RESOURCE_GROUP_LOCATION: "East US"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Intializes Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: KeywordReplace For Terraform
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["Terraform-Infrastructure/variables.tf"]'
          tokenPrefix: __
          tokenSuffix: __
        env:
          AKS_CLUSTER_NAME: ${{ env.AKS_CLUSTER_NAME }}
          RESOURCE_GROUP_NAME: ${{ env.RESOURCE_GROUP_NAME }}
          RESOURCE_GROUP_LOCATION: ${{ env.RESOURCE_GROUP_LOCATION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Az login via cli
        if: always()
        run: az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}

      - name: KeywordReplace For Kubernetes
        if: always()
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["Kubernetes/deployment.yaml"]'
          tokenPrefix: __
          tokenSuffix: __
        env:
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          TAG: ${{ env.TAG }}

      - name: Powershell Script Terraform
        working-directory: Terraform-Infrastructure
        shell: pwsh
        run: |
          ./run.ps1;
          terraform init -backend-config="access_key=${{ secrets.INTIAL_STORAGE_KEY }}"  -backend-config="storage_account_name=${{ secrets.INTIAL_STORAGE_ACCOUNT }}"
          terraform plan 
          terraform apply --auto-approve
      - name: AKS Context
        uses: azure/aks-set-context@v3
        if: always()
        with:
          resource-group: ${{  env.RESOURCE_GROUP_NAME }}
          cluster-name: ${{  env.AKS_CLUSTER_NAME }}
          suscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: AKS Deployment
        if: always()
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          strategy: basic
          manifests: |
            Kubernetes/deployment.yaml
            Kubernetes/service.yaml