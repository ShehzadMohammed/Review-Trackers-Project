name: Intial Deployment

on:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/terraform-kube-workflow.yaml"
      - "Terraform-Infrastructure/**.ps1"

  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  Terraform_And_Kubernetes:
    runs-on: ubuntu-latest

    env:
      AKS_CLUSTER_NAME: "rtpykube"
      RESOURCE_GROUP_NAME: "rt-infra"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Intializes Terraform
        uses: hashicorp/setup-terraform@v2

      - name: KeywordReplace For Terraform
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["Terraform-Infrastructure/variables.tf"]'
          tokenPrefix: __
          tokenSuffix: __
        env:
          AKS_CLUSTER_NAME: ${{ env.AKS_CLUSTER_NAME }}
          RESOURCE_GROUP_NAME: ${{ env.RESOURCE_GROUP_NAME }}

      - name: Powershell Script Terraform
        # working-directory: Terraform-Infrastructure/
        shell: pwsh
        run: ./Terraform-Infrastructure/run.ps1

      - name: Get latest tag
        id: latest_tag
        uses: jacobtomlinson/gha-get-docker-hub-tags@0.1.1
        with:
          org: ${{ secrets.DOCKERHUB_USERNAME }}
          repo: "review_trackers_project"

      - name: KeywordReplace For Kubernetes
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["/Kubernetes/deployment.yaml"]'
          tokenPrefix: __
          tokenSuffix: __
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME}}
          IMAGE_NAME: review_trackers_project
          TAG: ${{ steps.latest_tag.outputs.tag }}

      - name: Az install
        if: always()
        uses: azure/login@v1

      - name: Az login via cli
        if: always()
        run: az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}

      - name: AKS Context
        uses: azure/aks-set-context@v3
        if: always()
        with:
          resource-group: ${{  env.RESOURCE_GROUP_NAME }}
          cluster-name: ${{  env.AKS_CLUSTER_NAME }}
          suscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: AKS Deployment
        if: always()
        uses: Azure/k8s-deploy@v3.1
        with:
          manifest: |
            Kubernetes/deployment.yaml 
            Kubernetes/service.yaml

      - name: stage changed files
        run: git add .

      - name: commit changed files
        run: git commit -m "Auto updating repository from intial commit"

      - name: pushing changes
        run: git push origin main"

        # Granular Deployment
